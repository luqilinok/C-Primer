14_01

重载操作符必须具有至少一个class或枚举类型的操作数
重载操作符不保证操作数的求值顺序，例如对&&和||的重载版本不再具有“短路求值”的特性，两个操作数都要进行求值操作，而且不规定操作数的求值顺序
相同点：对于优先级和结合性及操作数的数目都不变

ex14_03

(a)"cobble"=="store"应用了C++语言内置版本的==，比较两个指针；
(b)svec1[0]=svec2[0]应用string版本的重载==；
(c)svec1=svec2应用了vector版本的重载==；
(d)svec1[0]=="stone"应用了string版本的重载==，字符串字面常量被转换为string

ex14_04

(a)%是一个具有对称性的运算符，因此%通常定义为非成员
(b)%=是一个能够改变类对象状态的运算符，因此%=定义为类的成员运算符
(c)++是一个能够改变类独享状态的云算符，因此++定义为类的成员运算符
(d)箭头运算符必须定义为成员运算符
(e)<<通常被定义为非成员运算符
(f)&&通常被定义为非成员运算符
(g)==通常被定义为非成员运算符
(h)调用运算符必须被定义为成员运算符

ex14_05

当时我是编写的book类，代码如下：

#include<iostream>
#include<string>


class Book
{
public:
	Book() = default;
	Book(const std::string &name, const std::string &I, double pr, const std::string &a, const std::string &p)
	{
		BookName = name;
		ISBN = I;
		Price = pr;
		Author = a;
		Publisher = p;
	}
	Book(std::istream &in)
	{
		in >> BookName >> ISBN >> Price >> Author >> Publisher;
	}

private:
	std::string BookName, ISBN, Author, Publisher;
	double Price = 0.0;
};

对其进行修改，可以定义重载的运算符，如ex14_05.h


ex14_06

Sales_data的输出运算符的定义如下：

class Sales_data
{
	friend ostream& operator<<(ostream &os,const Sales_data &item);
	//其他成员
};
ostream operator<<(ostream &os,const Sales_data &item)
{
	
	os<<item.isbn()<<" "<<item.units_sold()<<" "<<item.revenue()<<" "<<item.avg_price();
	return os;
}

ex14_07

String类的输出运算符如下：
 class String
 {
 	public:
		String();
		String(const char *str);
		friend ostream& operator<<(ostream &os,const String &str);
	private:
		char *str;
 };
 
 ostream& operator<<(ostream &os,const String &str)
 {
 	cout<<str;
	return os;
 }
 
 ex14_08
 
 这道例题的解答请参考14_05.cpp

ex14_09

输入运算符从给定输入流中读取对应类型的对象，存入Sales_data的数据成员中，与输出不同，输入通常要进行一些正确定的判定，并进行相应的处理。
Sales_data的输入运算符定义如下：
class Sales_data
{
	friend istream& operator>>(istream &is,Sales_data &item);
};
istream& operator>>(istream &is,Sales_data &item)
{
	double price;
	is>>item.bookNO>>item.units_sold>>price;
	if(is)
	{
		item.revenue=item.units_sold>>price;
	}
	else
	{
		item=Sales_data();
	}
	return is;
}

ex14_10

(a)参数中传入的是Sales_data对象会得到输入的值，其中bookNo、units_sold、price的值分别是0-201-99999-9、10、24.5；
(b)输入错误，参数中传入的Sales_data对象将会得到默认值


ex14_11

重载输入运算符和重载输出运算符的区别就在于重载输入运算符可能会做一些验证工作，但是本题中的这段代码没有进行验证，因此是不正确的
如果输入上一题的(a)组数据，那么程序会正常的执行，得到想要的结果；如过输入上一题的(b)组数据，那么程序虽然也能够执行，但是得到的值是错误的，因为这与预期希望的值是不符合的
